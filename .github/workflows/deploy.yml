name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
#  ECR_REPOSITORY: physical-theraphy-ecr-prod
  ECS_SERVICE: physical-theraphy-service
  ECS_CLUSTER: physical-theraphy-ecs-cluster-prod
  ECS_TASK_DEFINITION: physical-theraphy-task
  
  CONTAINER_NAME: physical-theraphy-container

permissions:
  contents: read

jobs:

  build-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install JDK 17
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: build Jar
#        run: ./gradlew bootJar --build-cache -Dorg.gradle.jvmargs=-Xmx4g
        run: ./gradlew bootJar --build-cache -Dorg.gradle.jvmargs=-Xmx4g

      - name: Cache PhysicalTheraphy build directory
        uses: actions/cache@v3
        with:
          path: ./
          key: ${{ runner.os }}-physicaltheraphy-build-cache-${{ steps.short-sha.outputs.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build-jar
    strategy:
      fail-fast: false
      matrix:
        service: [ app-api ] # 추후 배포할 서비스가 늘어나면 여기에 추가하면 됌
        environment: [ prod ]

    environment: ${{ matrix.service }}-${{ matrix.environment }}

    env:
      ECR_REPOSITORY: physicaltherapy-${{ matrix.service }}-${{ matrix.environment }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Restore Gradle cache directory
      uses: actions/cache@v3
      with:
        path: ./
        key: ${{ runner.os }}-physicaltheraphy-build-cache-${{ steps.short-sha.outputs.sha }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} # ECR_REGISTRY >> 813279486043.dkr.ecr.ap-northeast-2.amazonaws.com <-- 요 주소를 직접 밖아야할까...?
        IMAGE_TAG: ${{ github.sha }}
        SERVICE_TAG: ${{ matrix.service }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $SERVICE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

#    - name: Download Task Definition Template
#      run: |
#        aws ecs describe-task-definition \
#          --task-definition $ \
#          --query taskDefinition \
#          > task-definition.json

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
